name: Provision Infrastructure for the Application
on:
  push:
    branches:
      - feature-branch
    paths:
      - "terraform/*"
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_STATE_S3_BUCKET: devops-assignment-prod-web-app
  TF_State_File_Key: "prod/java-web-app.tfstate"
  TF_STATE_DYNAMODB_TABLE: "devops-assignment-prod-terraform-state"
defaults:
  run:
    shell: bash
    working-directory: ./terraform

permissions:
  contents: read

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Get code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHub-OIDC-Role
          aws-region: ${{env.AWS_REGION}}

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: |
          terraform init \
            -backend-config="region=${{env.AWS_REGION}}" \
            -backend-config="bucket=${{env.TF_STATE_S3_BUCKET}}" \
            -backend-config="key=${{env.TF_State_File_Key}}" \
            -backend-config="dynamodb_table=${{env.TF_STATE_DYNAMODB_TABLE}}"

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=./environments/prod.tfvars.tfvars -var="aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" -var="cluster_admin_user_arn=${{ secrets.CLUSTER_ADMIN_ARN }}"
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
        
      - name: Terraform Apply
        run: terraform apply -var-file=./environments/prod.tfvars.tfvars -auto-approve -var="aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" -var="cluster_admin_user_arn=${{ secrets.CLUSTER_ADMIN_ARN }}"